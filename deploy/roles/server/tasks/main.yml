---
- name: remove source folder
  file:
    path: "{{ remote_home_directory }}/crawler"
    state: absent

- name: clone git repo
  git:
    repo: "{{ git_repo_origin }}"
    dest: "{{ remote_home_directory }}/crawler"
    refspec: "refs/heads/{{ git_repo_branch }}"
    version: "{{ git_repo_sha }}"

- name: reset git repo
  command: git reset --hard HEAD
  args:
    chdir: "{{ remote_home_directory }}/crawler"

- name: docker cleanup
  command: bash -lc "docker rmi -f $(docker images | grep '^<none>' | awk '{print $3}')"
  ignore_errors: yes

# - name: stop crawler container
#   command: bash -lc "docker ps | grep crawler"
#   register: docker_ps
#   ignore_errors: yes
#   environment:
#     HOME: "{{ user }}"

# - debug:
#     var: docker_ps

- name: stop crawler container
  command: docker stop crawler
  ignore_errors: yes

- name: remove crawler container
  command: docker rm crawler
  ignore_errors: yes

- name: build crawler container
  command: docker build . --tag crawler
  args:
    chdir: "{{ remote_home_directory }}/crawler"
  async: 1000
  poll: 0
  register: crawler_build_task

- name: check on crawler container
  async_status:
    jid: "{{ crawler_build_task.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 50
  delay: 30

- name: run crawler container
  command: >
    docker run \
      -itd \
      --name crawler \
      -p 8000:8000 \
      --network crawler_network \
      # --ip {{ crawler_docker_ip }}
      --restart unless-stopped \
      crawler
  args:
    chdir: "{{ remote_home_directory }}/crawler"
  register: docker_run_result